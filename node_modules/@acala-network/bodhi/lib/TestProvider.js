"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestProvider = void 0;
const eth_providers_1 = require("@acala-network/eth-providers");
const api_1 = require("@polkadot/api");
const testingPairs_1 = require("@polkadot/keyring/testingPairs");
const Signer_1 = require("./Signer");
const AccountSigningKey_1 = require("./AccountSigningKey");
class TestProvider extends eth_providers_1.SignerProvider {
    constructor(_apiOptions) {
        const provider = _apiOptions?.provider || new api_1.WsProvider('ws://127.0.0.1:9944');
        super({ provider, ..._apiOptions });
    }
    async getWallets() {
        /* eslint-disable camelcase */
        const { alice, alice_stash, bob, bob_stash } = (0, testingPairs_1.createTestPairs)();
        const pairs = [alice, alice_stash, bob, bob_stash];
        const signingKey = new AccountSigningKey_1.AccountSigningKey(this.api.registry);
        signingKey.addKeyringPair(pairs);
        await this.api.isReady;
        const wallets = [];
        for (const pair of pairs) {
            const wallet = new Signer_1.Signer(this, pair.address, signingKey);
            const isClaimed = await wallet.isClaimed();
            if (!isClaimed) {
                await wallet.claimDefaultAccount();
            }
            wallets.push(wallet);
        }
        return wallets;
    }
}
exports.TestProvider = TestProvider;
//# sourceMappingURL=TestProvider.js.map