"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.dataToString = exports.toBN = exports.U64MAX = exports.U32MAX = void 0;
/* eslint-disable prefer-promise-reject-errors */
const bignumber_1 = require("@ethersproject/bignumber");
const util_1 = require("@polkadot/util");
const bn_js_1 = __importDefault(require("bn.js"));
exports.U32MAX = bignumber_1.BigNumber.from('0xffffffff');
exports.U64MAX = bignumber_1.BigNumber.from('0xffffffffffffffff');
function toBN(bigNumberis = 0) {
    if ((0, util_1.isU8a)(bigNumberis)) {
        return (0, util_1.u8aToBn)(bigNumberis);
    }
    if ((0, util_1.isHex)(bigNumberis)) {
        return (0, util_1.hexToBn)(bigNumberis);
    }
    if (bignumber_1.BigNumber.isBigNumber(bigNumberis)) {
        const hex = bigNumberis.toHexString();
        if (hex[0] === '-') {
            return new bn_js_1.default('-' + hex.substring(3), 16);
        }
        return new bn_js_1.default(hex.substring(2), 16);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return new bn_js_1.default(bigNumberis);
}
exports.toBN = toBN;
function dataToString(bytes) {
    if ((0, util_1.isBuffer)(bytes)) {
        return (0, util_1.u8aToHex)((0, util_1.bufferToU8a)(bytes));
    }
    if ((0, util_1.isU8a)(bytes)) {
        return (0, util_1.u8aToHex)(bytes);
    }
    if (Array.isArray(bytes)) {
        return (0, util_1.u8aToHex)(Buffer.from(bytes));
    }
    return bytes;
}
exports.dataToString = dataToString;
//# sourceMappingURL=utils.js.map